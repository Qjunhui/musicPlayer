{"remainingRequest":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qianjunhui/WebstormProjects/musicPlayer/src/views/06.playlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/src/views/06.playlist.vue","mtime":1591602924260},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAncGxheWxpc3QnLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBhY3RpdmVJbmRleDogJzEnLAogICAgICAgICAgICAvLyDmgLvmnaHmlbAKICAgICAgICAgICAgdG90YWw6IDAsCiAgICAgICAgICAgIC8vIOmhteeggQogICAgICAgICAgICBwYWdlOiAxLAogICAgICAgICAgICBwbGF5bGlzdDoge30sCiAgICAgICAgICAgIC8vIOatjOabsuWIl+ihqAogICAgICAgICAgICBwbGF5bGlzdFRyYWNrczogW10sCiAgICAgICAgICAgIC8vIOeDremXqOivhOiuugogICAgICAgICAgICBob3RDb21tZW50czogW10sCiAgICAgICAgICAgIGhvdENvdW50OiAwLAogICAgICAgICAgICAvLyDmnIDmlrDor4TorroKICAgICAgICAgICAgbmV3Q29tbWVudHM6IFtdCiAgICAgICAgfTsKICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIC8vIOivpuaDhemhtQogICAgICAgIGF4aW9zKHsKICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9hdXR1bW5maXNoLmNuL3BsYXlsaXN0L2RldGFpbCcsCiAgICAgICAgICAgIG1ldGhvZHM6ICdnZXQnLAogICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZAogICAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgICB0aGlzLnBsYXlsaXN0ID0gcmVzLmRhdGEucGxheWxpc3QKICAgICAgICAgICAgdGhpcy5wbGF5bGlzdFRyYWNrcyA9IHJlcy5kYXRhLnBsYXlsaXN0LnRyYWNrcwogICAgICAgIH0pCiAgICAgICAgLy8g54Ot6Zeo6K+E6K66CiAgICAgICAgYXhpb3MoewogICAgICAgICAgICB1cmw6ICdodHRwczovL2F1dHVtbmZpc2guY24vY29tbWVudC9ob3QnLAogICAgICAgICAgICBtZXRob2RzOiAnZ2V0JywKICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICBpZDogdGhpcy4kcm91dGUucXVlcnkuaWQsCiAgICAgICAgICAgICAgICB0eXBlOiAyLAogICAgICAgICAgICAgICAgbGltaXQ6IDUKICAgICAgICAgICAgfQogICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgdGhpcy5ob3RDb21tZW50cyA9IHJlcy5kYXRhLmhvdENvbW1lbnRzCiAgICAgICAgICAgIHRoaXMuaG90Q291bnQgPSByZXMuZGF0YS50b3RhbAogICAgICAgIH0pCiAgICAgICAgLy8g5pyA5paw6K+E6K66CiAgICAgICAgdGhpcy5nZXROZXdDb21tZW50cygpCiAgICB9LAogICAgZmlsdGVyczogewogICAgICAgIC8vIOWkhOeQhuaXtumXtCDmr6vnp5ItPuWIhuenkgogICAgICAgIGZvcm1hdFRpbWU6IGZ1bmN0aW9uKHRpbWUpIHsKICAgICAgICAgICAgbGV0IG1pbiA9IHBhcnNlSW50KHRpbWUgLyAxMDAwIC8gNjApCiAgICAgICAgICAgIG1pbiA9IG1pbiA8IDEwID8gJzAnICsgbWluIDogbWluCiAgICAgICAgICAgIGxldCBzZWMgPSBwYXJzZUludCh0aW1lIC8gMTAwMCAlIDYwKQogICAgICAgICAgICBzZWMgPSBzZWMgPCAxMCA/ICcwJyArIHNlYyA6IHNlYwogICAgICAgICAgICByZXR1cm4gbWluICsgJzonICsgc2VjCiAgICAgICAgfSwKICAgICAgICAvLyBZWVlZLU1NLUREIGhoOm1tOnNzCiAgICAgICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUodmFsdWUpOwogICAgICAgICAgICBsZXQgeSA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgICAgICAgbGV0IE1NID0gZGF0ZS5nZXRNb250aCgpICsgMTsKICAgICAgICAgICAgTU0gPSBNTSA8IDEwID8gKCcwJyArIE1NKSA6IE1NOwogICAgICAgICAgICBsZXQgZCA9IGRhdGUuZ2V0RGF0ZSgpOwogICAgICAgICAgICBkID0gZCA8IDEwID8gKCcwJyArIGQpIDogZDsKICAgICAgICAgICAgbGV0IGggPSBkYXRlLmdldEhvdXJzKCk7CiAgICAgICAgICAgIGggPSBoIDwgMTAgPyAoJzAnICsgaCkgOiBoOwogICAgICAgICAgICBsZXQgbSA9IGRhdGUuZ2V0TWludXRlcygpOwogICAgICAgICAgICBtID0gbSA8IDEwID8gKCcwJyArIG0pIDogbTsKICAgICAgICAgICAgbGV0IHMgPSBkYXRlLmdldFNlY29uZHMoKTsKICAgICAgICAgICAgcyA9IHMgPCAxMCA/ICgnMCcgKyBzKSA6IHM7CiAgICAgICAgICAgIHJldHVybiB5ICsgJy0nICsgTU0gKyAnLScgKyBkICsgJyAnICsgaCArICc6JyArIG0gKyAnOicgKyBzOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLy8g5pyA5paw6K+E6K66CiAgICAgICAgZ2V0TmV3Q29tbWVudHMoKSB7CiAgICAgICAgICAgIGF4aW9zKHsKICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9jb21tZW50L3BsYXlsaXN0JywKICAgICAgICAgICAgICAgIG1ldGhvZHM6ICdnZXQnLAogICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkLAogICAgICAgICAgICAgICAgICAgIGxpbWl0OiA1LAogICAgICAgICAgICAgICAgICAgIG9mZnNldDogKHRoaXMucGFnZS0xKSo1CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubmV3Q29tbWVudHMgPSByZXMuZGF0YS5jb21tZW50cwogICAgICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLnRvdGFsCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvLyDliIbpobUKICAgICAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICAgICAgICB0aGlzLnBhZ2UgPSB2YWwKICAgICAgICAgICAgdGhpcy5nZXROZXdDb21tZW50cygpCiAgICAgICAgfQogICAgfQp9Owo="},{"version":3,"sources":["06.playlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"06.playlist.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"playlist-container\">\n        <div class=\"top-wrap\">\n            <div class=\"img-wrap\">\n                <img :src=\"playlist.coverImgUrl\" alt=\"\" />\n            </div>\n            <div class=\"info-wrap\">\n                <p class=\"title\">{{ playlist.name }}</p>\n                <div class=\"author-wrap\">\n                    <img class=\"avatar\" :src=\"playlist.creator.avatarUrl\" alt=\"\" />\n                    <span class=\"name\">{{ playlist.creator.nickname }}</span>\n                    <span class=\"time\">{{ playlist.createTime | formatDate }} 创建</span>\n                </div>\n                <div class=\"play-wrap\">\n                    <span class=\"iconfont icon-circle-play\"></span>\n                    <span class=\"text\">播放全部</span>\n                </div>\n                <div class=\"tag-wrap\">\n                    <span class=\"title\">标签:</span>\n                    <ul>\n                        <li v-for=\"(item,index) in playlist.tags\" :key=\"index\">{{ item }}</li>\n                    </ul>\n                </div>\n                <div class=\"desc-wrap\">\n                    <span class=\"title\">简介:</span>\n                    <span class=\"desc\">{{ playlist.description }}</span>\n                </div>\n            </div>\n        </div>\n        <el-tabs v-model=\"activeIndex\">\n            <el-tab-pane label=\"歌曲列表\" name=\"1\">\n                <table class=\"el-table playlit-table\">\n                    <thead>\n                    <th></th>\n                    <th></th>\n                    <th>音乐标题</th>\n                    <th>歌手</th>\n                    <th>专辑</th>\n                    <th>时长</th>\n                    </thead>\n                    <tbody>\n                    <tr class=\"el-table__row\" v-for=\"(item,index) in playlistTracks\" :key=\"index\">\n                        <td>{{ index+1 }}</td>\n                        <td>\n                            <div class=\"img-wrap\">\n                                <img :src=\"item.al.picUrl\" alt=\"\" />\n                                <span class=\"iconfont icon-play\"></span>\n                            </div>\n                        </td>\n                        <td>\n                            <div class=\"song-wrap\">\n                                <div class=\"name-wrap\">\n                                    <span>{{ item.name }}</span>\n                                    <span class=\"iconfont icon-mv\"></span>\n                                </div>\n                                <span v-if=\"item.ar[0].alias.length!=0\">{{ item.ar[0].alias[0] }}</span>\n                            </div>\n                        </td>\n                        <td>{{ item.ar[0].name }}</td>\n                        <td>{{ item.al.name }}</td>\n                        <td>{{ item.dt | formatTime }}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </el-tab-pane>\n            <el-tab-pane label=\"评论(66)\" name=\"2\">\n                <!-- 精彩评论 -->\n                <div class=\"comment-wrap\">\n                    <p class=\"title\">精彩评论<span class=\"number\">({{ hotCount }})</span></p>\n                    <div class=\"comments-wrap\">\n                        <div\n                            class=\"item\"\n                            v-for=\"(item,index) in hotComments\"\n                            :key=\"index\"\n                        >\n                            <div class=\"icon-wrap\">\n                                <img :src=\"item.user.avatarUrl\" alt=\"\" />\n                            </div>\n                            <div class=\"content-wrap\">\n                                <div class=\"content\">\n                                    <span class=\"name\">{{ item.user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.content }}</span>\n                                </div>\n                                <div class=\"re-content\" v-if=\"item.beReplied.length!=0\">\n                                    <span class=\"name\">{{ item.beReplied[0].user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.beReplied[0].content }}</span>\n                                </div>\n                                <div class=\"date\">{{ item.time | formatDate }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- 最新评论 -->\n                <div class=\"comment-wrap\">\n                    <p class=\"title\">最新评论<span class=\"number\">({{ total }})</span></p>\n                    <div class=\"comments-wrap\">\n                        <div\n                            class=\"item\"\n                            v-for=\"(item,index) in newComments\"\n                            :key=\"index\"\n                        >\n                            <div class=\"icon-wrap\">\n                                <img :src=\"item.user.avatarUrl\" alt=\"\" />\n                            </div>\n                            <div class=\"content-wrap\">\n                                <div class=\"content\">\n                                    <span class=\"name\">{{ item.user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.content }}</span>\n                                </div>\n                                <div class=\"re-content\" v-if=\"item.beReplied.length!=0\">\n                                    <span class=\"name\">{{ item.beReplied[0].user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.beReplied[0].content }}</span>\n                                </div>\n                                <div class=\"date\">{{ item.time | formatDate }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- 分页器 -->\n                <el-pagination\n                        @current-change=\"handleCurrentChange\"\n                        background\n                        layout=\"prev, pager, next\"\n                        :total=\"total\"\n                        :current-page=\"page\"\n                        :page-size=\"5\"\n                >\n                </el-pagination>\n            </el-tab-pane>\n        </el-tabs>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n\n    export default {\n        name: 'playlist',\n        data() {\n            return {\n                activeIndex: '1',\n                // 总条数\n                total: 0,\n                // 页码\n                page: 1,\n                playlist: {},\n                // 歌曲列表\n                playlistTracks: [],\n                // 热门评论\n                hotComments: [],\n                hotCount: 0,\n                // 最新评论\n                newComments: []\n            };\n        },\n        created() {\n            // 详情页\n            axios({\n                url: 'https://autumnfish.cn/playlist/detail',\n                methods: 'get',\n                params: {\n                    id: this.$route.query.id\n                }\n            }).then(res => {\n                this.playlist = res.data.playlist\n                this.playlistTracks = res.data.playlist.tracks\n            })\n            // 热门评论\n            axios({\n                url: 'https://autumnfish.cn/comment/hot',\n                methods: 'get',\n                params: {\n                    id: this.$route.query.id,\n                    type: 2,\n                    limit: 5\n                }\n            }).then(res => {\n                this.hotComments = res.data.hotComments\n                this.hotCount = res.data.total\n            })\n            // 最新评论\n            this.getNewComments()\n        },\n        filters: {\n            // 处理时间 毫秒->分秒\n            formatTime: function(time) {\n                let min = parseInt(time / 1000 / 60)\n                min = min < 10 ? '0' + min : min\n                let sec = parseInt(time / 1000 % 60)\n                sec = sec < 10 ? '0' + sec : sec\n                return min + ':' + sec\n            },\n            // YYYY-MM-DD hh:mm:ss\n            formatDate: function (value) {\n                let date = new Date(value);\n                let y = date.getFullYear();\n                let MM = date.getMonth() + 1;\n                MM = MM < 10 ? ('0' + MM) : MM;\n                let d = date.getDate();\n                d = d < 10 ? ('0' + d) : d;\n                let h = date.getHours();\n                h = h < 10 ? ('0' + h) : h;\n                let m = date.getMinutes();\n                m = m < 10 ? ('0' + m) : m;\n                let s = date.getSeconds();\n                s = s < 10 ? ('0' + s) : s;\n                return y + '-' + MM + '-' + d + ' ' + h + ':' + m + ':' + s;\n            }\n        },\n        methods: {\n            // 最新评论\n            getNewComments() {\n                axios({\n                    url: 'https://autumnfish.cn/comment/playlist',\n                    methods: 'get',\n                    params: {\n                        id: this.$route.query.id,\n                        limit: 5,\n                        offset: (this.page-1)*5\n                    }\n                }).then(res => {\n                    this.newComments = res.data.comments\n                    this.total = res.data.total\n                })\n            },\n            // 分页\n            handleCurrentChange(val) {\n                this.page = val\n                this.getNewComments()\n            }\n        }\n    };\n</script>\n\n<style >\n\n</style>\n"]}]}