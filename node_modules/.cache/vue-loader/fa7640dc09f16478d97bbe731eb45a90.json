{"remainingRequest":"/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qianjunhui/WebstormProjects/music/src/views/05.result.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qianjunhui/WebstormProjects/music/src/views/05.result.vue","mtime":1591600025828},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAncmVzdWx0JywKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWN0aXZlSW5kZXg6ICdzb25ncycsCiAgICAgICAgICAgIC8vIOatjOabsgogICAgICAgICAgICBzb25nc0xpc3RzOiBbXSwKICAgICAgICAgICAgc29uZ0NvdW50OiAwLAogICAgICAgICAgICAvLyDmrYzljZUKICAgICAgICAgICAgcGxheWxpc3RzOiBbXSwKICAgICAgICAgICAgcGxheWxpc3RDb3VudDogMCwKICAgICAgICAgICAgLy8gTVYKICAgICAgICAgICAgbXZsaXN0czogW10sCiAgICAgICAgICAgIG12Q291bnQ6IDAKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLnNlYXJjaExpc3QoMSwxMCkKICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgYWN0aXZlSW5kZXgoKXsKICAgICAgICAgICAgbGV0IHR5cGUgPSAxCiAgICAgICAgICAgIGxldCBsaW1pdCA9IDEwCiAgICAgICAgICAgIHN3aXRjaCAodGhpcy5hY3RpdmVJbmRleCkgewogICAgICAgICAgICAgICAgY2FzZSAnc29uZ3MnOgogICAgICAgICAgICAgICAgICAgIHR5cGUgPSAxCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICdsaXN0cyc6CiAgICAgICAgICAgICAgICAgICAgdHlwZSA9IDEwMDAKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgJ212JzoKICAgICAgICAgICAgICAgICAgICB0eXBlID0gMTAwNAogICAgICAgICAgICAgICAgICAgIGxpbWl0ID0gOAogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLnNlYXJjaExpc3QodHlwZSxsaW1pdCkKICAgICAgICB9CiAgICB9LAogICAgZmlsdGVyczogewogICAgICAgIC8vIOWkhOeQhuaXtumXtCDmr6vnp5ItPuWIhuenkgogICAgICAgIGZvcm1hdFRpbWU6IGZ1bmN0aW9uICh0aW1lKSB7CiAgICAgICAgICAgIGxldCBtaW4gPSBwYXJzZUludCh0aW1lIC8gMTAwMCAvIDYwKQogICAgICAgICAgICBtaW4gPSBtaW4gPCAxMCA/ICcwJyArIG1pbiA6IG1pbgogICAgICAgICAgICBsZXQgc2VjID0gcGFyc2VJbnQodGltZSAvIDEwMDAgJSA2MCkKICAgICAgICAgICAgc2VjID0gc2VjIDwgMTAgPyAnMCcgKyBzZWMgOiBzZWMKICAgICAgICAgICAgcmV0dXJuIG1pbiArICc6JyArIHNlYwogICAgICAgIH0sCiAgICAgICAgLy8g5aSE55CG5qyh5pWw77ya6LaF6L+HMTDkuIfvvIzmmL7npLp4eOS4hwogICAgICAgIGZvcm1hdENvdW50OiBmdW5jdGlvbiAoY291bnQpIHsKICAgICAgICAgICAgaWYoY291bnQgPiAxMDAwMDApewogICAgICAgICAgICAgICAgbGV0IHBsYXlDb3VudCA9IHBhcnNlSW50KGNvdW50LzEwMDAwKSsn5LiHJwogICAgICAgICAgICAgICAgcmV0dXJuIHBsYXlDb3VudAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvLyDojrflj5bmlbDmja4KICAgICAgICBzZWFyY2hMaXN0KHR5cGUsbGltaXQpIHsKICAgICAgICAgICAgYXhpb3MoewogICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9hdXR1bW5maXNoLmNuL3NlYXJjaCcsCiAgICAgICAgICAgICAgICBtZXRob2RzOiAnZ2V0JywKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIGtleXdvcmRzOiB0aGlzLiRyb3V0ZS5xdWVyeS5rdywKICAgICAgICAgICAgICAgICAgICB0eXBlLAogICAgICAgICAgICAgICAgICAgIGxpbWl0CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIGlmKHR5cGUgPT0gMSl7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb25nc0xpc3RzID0gcmVzLmRhdGEucmVzdWx0LnNvbmdzCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb25nQ291bnQgPSByZXMuZGF0YS5yZXN1bHQuc29uZ0NvdW50CiAgICAgICAgICAgICAgICB9ZWxzZSBpZiAodHlwZSA9PSAxMDAwKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5bGlzdHMgPSByZXMuZGF0YS5yZXN1bHQucGxheWxpc3RzCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5bGlzdENvdW50ID0gcmVzLmRhdGEucmVzdWx0LnBsYXlsaXN0Q291bnQKICAgICAgICAgICAgICAgIH1lbHNlIGlmICh0eXBlID09IDEwMDQpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm12bGlzdHMgPSByZXMuZGF0YS5yZXN1bHQubXZzCiAgICAgICAgICAgICAgICAgICAgdGhpcy5tdkNvdW50ID0gcmVzLmRhdGEucmVzdWx0Lm12Q291bnQKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIC8vIOaSreaUvumfs+S5kAogICAgICAgIHBsYXlNdXNpYyhpZCl7CiAgICAgICAgICAgIGF4aW9zKHsKICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9zb25nL3VybCcsCiAgICAgICAgICAgICAgICBtZXRob2RzOiAnZ2V0JywKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIGlkCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIGxldCBzb25nVXJsID0gcmVzLmRhdGEuZGF0YVswXS51cmwKICAgICAgICAgICAgICAgIHRoaXMuJHBhcmVudC5tdXNpY1VybCA9IHNvbmdVcmwKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIC8vIOatjOWNleivpuaDhemhtQogICAgICAgIHRvRGV0YWlsKGlkKSB7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvcGxheWxpc3Q/aWQ9JHtpZH1gKQogICAgICAgIH0sCiAgICAgICAgLy8gTVbor6bmg4XpobUKICAgICAgICB0b01WKGlkKSB7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvbXY/aWQ9JHtpZH1gKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["05.result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"05.result.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"result-container\">\n        <div class=\"title-wrap\">\n            <h2 class=\"title\">{{ $route.query.kw }}</h2>\n            <span class=\"sub-title\">找到{{ songCount }}个结果</span>\n        </div>\n        <el-tabs v-model=\"activeIndex\">\n            <el-tab-pane label=\"歌曲\" name=\"songs\">\n                <table class=\"el-table\">\n                    <thead>\n                    <th></th>\n                    <th>音乐标题</th>\n                    <th>歌手</th>\n                    <th>专辑</th>\n                    <th>时长</th>\n                    </thead>\n                    <tbody>\n                        <tr\n                            class=\"el-table__row\"\n                            v-for=\"(item,index) in songsLists\"\n                            :key=\"index\"\n                            @dblclick=\"playMusic(item.id)\"\n                        >\n                            <td>{{ index+1 }}</td>\n                            <td>\n                                <div class=\"song-wrap\">\n                                    <div class=\"name-wrap\">\n                                        <span>{{ item.name }}</span>\n                                        <span v-if=\"item.mvid!=0\" class=\"iconfont icon-mv\"></span>\n                                    </div>\n                                    <span v-if=\"item.alias.length!=0\">{{ item.alias[0] }}</span>\n                                </div>\n                            </td>\n                            <td>{{ item.artists[0].name }}</td>\n                            <td>{{ item.album.name }}</td>\n                            <td>{{ item.duration | formatTime }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </el-tab-pane>\n            <el-tab-pane label=\"歌单\" name=\"lists\">\n                <div class=\"items\">\n                    <div\n                        class=\"item\"\n                        v-for=\"(item,index) in playlists\"\n                        :key=\"index\"\n                        @click=\"toDetail(item.id)\"\n                    >\n                        <div class=\"img-wrap\">\n                            <div class=\"num-wrap\">\n                                播放量:\n                                <span class=\"num\">{{ item.playCount | formatCount }}</span>\n                            </div>\n                            <img :src=\"item.coverImgUrl\" alt=\"\" />\n                            <span class=\"iconfont icon-play\"></span>\n                        </div>\n                        <p class=\"name\">{{ item.name }}</p>\n                    </div>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"MV\" name=\"mv\">\n                <div class=\"items mv\">\n                    <div\n                        class=\"item\"\n                        v-for=\"(item,index) in mvlists\"\n                        :key=\"index\"\n                        @click=\"toMV(item.id)\"\n                    >\n                        <div class=\"img-wrap\">\n                            <img :src=\"item.cover\" alt=\"\" />\n                            <span class=\"iconfont icon-play\"></span>\n                            <div class=\"num-wrap\">\n                                <div class=\"iconfont icon-play\"></div>\n                                <div class=\"num\">{{ item.playCount | formatCount }}</div>\n                            </div>\n                            <span class=\"time\">{{ item.duration | formatTime }}</span>\n                        </div>\n                        <div class=\"info-wrap\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"singer\">{{ item.artistName }}</div>\n                        </div>\n                    </div>\n                </div>\n            </el-tab-pane>\n        </el-tabs>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n\n    export default {\n        name: 'result',\n        data() {\n            return {\n                activeIndex: 'songs',\n                // 歌曲\n                songsLists: [],\n                songCount: 0,\n                // 歌单\n                playlists: [],\n                playlistCount: 0,\n                // MV\n                mvlists: [],\n                mvCount: 0\n            }\n        },\n        created() {\n            this.searchList(1,10)\n        },\n        watch:{\n            activeIndex(){\n                let type = 1\n                let limit = 10\n                switch (this.activeIndex) {\n                    case 'songs':\n                        type = 1\n                        break;\n                    case 'lists':\n                        type = 1000\n                        break;\n                    case 'mv':\n                        type = 1004\n                        limit = 8\n                        break;\n                    default:\n                        break;\n                }\n                this.searchList(type,limit)\n            }\n        },\n        filters: {\n            // 处理时间 毫秒->分秒\n            formatTime: function (time) {\n                let min = parseInt(time / 1000 / 60)\n                min = min < 10 ? '0' + min : min\n                let sec = parseInt(time / 1000 % 60)\n                sec = sec < 10 ? '0' + sec : sec\n                return min + ':' + sec\n            },\n            // 处理次数：超过10万，显示xx万\n            formatCount: function (count) {\n                if(count > 100000){\n                    let playCount = parseInt(count/10000)+'万'\n                    return playCount\n                }\n            }\n        },\n        methods: {\n            // 获取数据\n            searchList(type,limit) {\n                axios({\n                    url: 'https://autumnfish.cn/search',\n                    methods: 'get',\n                    params: {\n                        keywords: this.$route.query.kw,\n                        type,\n                        limit\n                    }\n                }).then(res => {\n                    if(type == 1){\n                        this.songsLists = res.data.result.songs\n                        this.songCount = res.data.result.songCount\n                    }else if (type == 1000) {\n                        this.playlists = res.data.result.playlists\n                        this.playlistCount = res.data.result.playlistCount\n                    }else if (type == 1004) {\n                        this.mvlists = res.data.result.mvs\n                        this.mvCount = res.data.result.mvCount\n                    }\n                })\n            },\n            // 播放音乐\n            playMusic(id){\n                axios({\n                    url: 'https://autumnfish.cn/song/url',\n                    methods: 'get',\n                    params: {\n                        id\n                    }\n                }).then(res => {\n                    let songUrl = res.data.data[0].url\n                    this.$parent.musicUrl = songUrl\n                })\n            },\n            // 歌单详情页\n            toDetail(id) {\n                this.$router.push(`/playlist?id=${id}`)\n            },\n            // MV详情页\n            toMV(id) {\n                this.$router.push(`/mv?id=${id}`)\n            }\n        }\n    }\n</script>\n\n<style >\n\n</style>\n"]}]}