{"remainingRequest":"/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qianjunhui/WebstormProjects/music/src/views/04.mvs.vue?vue&type=template&id=db0ca8cc&","dependencies":[{"path":"/Users/qianjunhui/WebstormProjects/music/src/views/04.mvs.vue","mtime":1591262741547},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}