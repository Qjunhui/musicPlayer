{"remainingRequest":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/babel-loader/lib/index.js!/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qianjunhui/WebstormProjects/musicPlayer/src/views/06.playlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/src/views/06.playlist.vue","mtime":1591602924260},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/musicPlayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdwbGF5bGlzdCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjdGl2ZUluZGV4OiAnMScsCiAgICAgIC8vIOaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgLy8g6aG156CBCiAgICAgIHBhZ2U6IDEsCiAgICAgIHBsYXlsaXN0OiB7fSwKICAgICAgLy8g5q2M5puy5YiX6KGoCiAgICAgIHBsYXlsaXN0VHJhY2tzOiBbXSwKICAgICAgLy8g54Ot6Zeo6K+E6K66CiAgICAgIGhvdENvbW1lbnRzOiBbXSwKICAgICAgaG90Q291bnQ6IDAsCiAgICAgIC8vIOacgOaWsOivhOiuugogICAgICBuZXdDb21tZW50czogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAvLyDor6bmg4XpobUKICAgIGF4aW9zKHsKICAgICAgdXJsOiAnaHR0cHM6Ly9hdXR1bW5maXNoLmNuL3BsYXlsaXN0L2RldGFpbCcsCiAgICAgIG1ldGhvZHM6ICdnZXQnLAogICAgICBwYXJhbXM6IHsKICAgICAgICBpZDogdGhpcy4kcm91dGUucXVlcnkuaWQKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIF90aGlzLnBsYXlsaXN0ID0gcmVzLmRhdGEucGxheWxpc3Q7CiAgICAgIF90aGlzLnBsYXlsaXN0VHJhY2tzID0gcmVzLmRhdGEucGxheWxpc3QudHJhY2tzOwogICAgfSk7IC8vIOeDremXqOivhOiuugoKICAgIGF4aW9zKHsKICAgICAgdXJsOiAnaHR0cHM6Ly9hdXR1bW5maXNoLmNuL2NvbW1lbnQvaG90JywKICAgICAgbWV0aG9kczogJ2dldCcsCiAgICAgIHBhcmFtczogewogICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZCwKICAgICAgICB0eXBlOiAyLAogICAgICAgIGxpbWl0OiA1CiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBfdGhpcy5ob3RDb21tZW50cyA9IHJlcy5kYXRhLmhvdENvbW1lbnRzOwogICAgICBfdGhpcy5ob3RDb3VudCA9IHJlcy5kYXRhLnRvdGFsOwogICAgfSk7IC8vIOacgOaWsOivhOiuugoKICAgIHRoaXMuZ2V0TmV3Q29tbWVudHMoKTsKICB9LAogIGZpbHRlcnM6IHsKICAgIC8vIOWkhOeQhuaXtumXtCDmr6vnp5ItPuWIhuenkgogICAgZm9ybWF0VGltZTogZnVuY3Rpb24gZm9ybWF0VGltZSh0aW1lKSB7CiAgICAgIHZhciBtaW4gPSBwYXJzZUludCh0aW1lIC8gMTAwMCAvIDYwKTsKICAgICAgbWluID0gbWluIDwgMTAgPyAnMCcgKyBtaW4gOiBtaW47CiAgICAgIHZhciBzZWMgPSBwYXJzZUludCh0aW1lIC8gMTAwMCAlIDYwKTsKICAgICAgc2VjID0gc2VjIDwgMTAgPyAnMCcgKyBzZWMgOiBzZWM7CiAgICAgIHJldHVybiBtaW4gKyAnOicgKyBzZWM7CiAgICB9LAogICAgLy8gWVlZWS1NTS1ERCBoaDptbTpzcwogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gZm9ybWF0RGF0ZSh2YWx1ZSkgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHZhbHVlKTsKICAgICAgdmFyIHkgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CiAgICAgIHZhciBNTSA9IGRhdGUuZ2V0TW9udGgoKSArIDE7CiAgICAgIE1NID0gTU0gPCAxMCA/ICcwJyArIE1NIDogTU07CiAgICAgIHZhciBkID0gZGF0ZS5nZXREYXRlKCk7CiAgICAgIGQgPSBkIDwgMTAgPyAnMCcgKyBkIDogZDsKICAgICAgdmFyIGggPSBkYXRlLmdldEhvdXJzKCk7CiAgICAgIGggPSBoIDwgMTAgPyAnMCcgKyBoIDogaDsKICAgICAgdmFyIG0gPSBkYXRlLmdldE1pbnV0ZXMoKTsKICAgICAgbSA9IG0gPCAxMCA/ICcwJyArIG0gOiBtOwogICAgICB2YXIgcyA9IGRhdGUuZ2V0U2Vjb25kcygpOwogICAgICBzID0gcyA8IDEwID8gJzAnICsgcyA6IHM7CiAgICAgIHJldHVybiB5ICsgJy0nICsgTU0gKyAnLScgKyBkICsgJyAnICsgaCArICc6JyArIG0gKyAnOicgKyBzOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8g5pyA5paw6K+E6K66CiAgICBnZXROZXdDb21tZW50czogZnVuY3Rpb24gZ2V0TmV3Q29tbWVudHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgYXhpb3MoewogICAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9jb21tZW50L3BsYXlsaXN0JywKICAgICAgICBtZXRob2RzOiAnZ2V0JywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZCwKICAgICAgICAgIGxpbWl0OiA1LAogICAgICAgICAgb2Zmc2V0OiAodGhpcy5wYWdlIC0gMSkgKiA1CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIubmV3Q29tbWVudHMgPSByZXMuZGF0YS5jb21tZW50czsKICAgICAgICBfdGhpczIudG90YWwgPSByZXMuZGF0YS50b3RhbDsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5YiG6aG1CiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICB0aGlzLnBhZ2UgPSB2YWw7CiAgICAgIHRoaXMuZ2V0TmV3Q29tbWVudHMoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["06.playlist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"playlist-container\">\n        <div class=\"top-wrap\">\n            <div class=\"img-wrap\">\n                <img :src=\"playlist.coverImgUrl\" alt=\"\" />\n            </div>\n            <div class=\"info-wrap\">\n                <p class=\"title\">{{ playlist.name }}</p>\n                <div class=\"author-wrap\">\n                    <img class=\"avatar\" :src=\"playlist.creator.avatarUrl\" alt=\"\" />\n                    <span class=\"name\">{{ playlist.creator.nickname }}</span>\n                    <span class=\"time\">{{ playlist.createTime | formatDate }} 创建</span>\n                </div>\n                <div class=\"play-wrap\">\n                    <span class=\"iconfont icon-circle-play\"></span>\n                    <span class=\"text\">播放全部</span>\n                </div>\n                <div class=\"tag-wrap\">\n                    <span class=\"title\">标签:</span>\n                    <ul>\n                        <li v-for=\"(item,index) in playlist.tags\" :key=\"index\">{{ item }}</li>\n                    </ul>\n                </div>\n                <div class=\"desc-wrap\">\n                    <span class=\"title\">简介:</span>\n                    <span class=\"desc\">{{ playlist.description }}</span>\n                </div>\n            </div>\n        </div>\n        <el-tabs v-model=\"activeIndex\">\n            <el-tab-pane label=\"歌曲列表\" name=\"1\">\n                <table class=\"el-table playlit-table\">\n                    <thead>\n                    <th></th>\n                    <th></th>\n                    <th>音乐标题</th>\n                    <th>歌手</th>\n                    <th>专辑</th>\n                    <th>时长</th>\n                    </thead>\n                    <tbody>\n                    <tr class=\"el-table__row\" v-for=\"(item,index) in playlistTracks\" :key=\"index\">\n                        <td>{{ index+1 }}</td>\n                        <td>\n                            <div class=\"img-wrap\">\n                                <img :src=\"item.al.picUrl\" alt=\"\" />\n                                <span class=\"iconfont icon-play\"></span>\n                            </div>\n                        </td>\n                        <td>\n                            <div class=\"song-wrap\">\n                                <div class=\"name-wrap\">\n                                    <span>{{ item.name }}</span>\n                                    <span class=\"iconfont icon-mv\"></span>\n                                </div>\n                                <span v-if=\"item.ar[0].alias.length!=0\">{{ item.ar[0].alias[0] }}</span>\n                            </div>\n                        </td>\n                        <td>{{ item.ar[0].name }}</td>\n                        <td>{{ item.al.name }}</td>\n                        <td>{{ item.dt | formatTime }}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </el-tab-pane>\n            <el-tab-pane label=\"评论(66)\" name=\"2\">\n                <!-- 精彩评论 -->\n                <div class=\"comment-wrap\">\n                    <p class=\"title\">精彩评论<span class=\"number\">({{ hotCount }})</span></p>\n                    <div class=\"comments-wrap\">\n                        <div\n                            class=\"item\"\n                            v-for=\"(item,index) in hotComments\"\n                            :key=\"index\"\n                        >\n                            <div class=\"icon-wrap\">\n                                <img :src=\"item.user.avatarUrl\" alt=\"\" />\n                            </div>\n                            <div class=\"content-wrap\">\n                                <div class=\"content\">\n                                    <span class=\"name\">{{ item.user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.content }}</span>\n                                </div>\n                                <div class=\"re-content\" v-if=\"item.beReplied.length!=0\">\n                                    <span class=\"name\">{{ item.beReplied[0].user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.beReplied[0].content }}</span>\n                                </div>\n                                <div class=\"date\">{{ item.time | formatDate }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- 最新评论 -->\n                <div class=\"comment-wrap\">\n                    <p class=\"title\">最新评论<span class=\"number\">({{ total }})</span></p>\n                    <div class=\"comments-wrap\">\n                        <div\n                            class=\"item\"\n                            v-for=\"(item,index) in newComments\"\n                            :key=\"index\"\n                        >\n                            <div class=\"icon-wrap\">\n                                <img :src=\"item.user.avatarUrl\" alt=\"\" />\n                            </div>\n                            <div class=\"content-wrap\">\n                                <div class=\"content\">\n                                    <span class=\"name\">{{ item.user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.content }}</span>\n                                </div>\n                                <div class=\"re-content\" v-if=\"item.beReplied.length!=0\">\n                                    <span class=\"name\">{{ item.beReplied[0].user.nickname }}：</span>\n                                    <span class=\"comment\">{{ item.beReplied[0].content }}</span>\n                                </div>\n                                <div class=\"date\">{{ item.time | formatDate }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- 分页器 -->\n                <el-pagination\n                        @current-change=\"handleCurrentChange\"\n                        background\n                        layout=\"prev, pager, next\"\n                        :total=\"total\"\n                        :current-page=\"page\"\n                        :page-size=\"5\"\n                >\n                </el-pagination>\n            </el-tab-pane>\n        </el-tabs>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n\n    export default {\n        name: 'playlist',\n        data() {\n            return {\n                activeIndex: '1',\n                // 总条数\n                total: 0,\n                // 页码\n                page: 1,\n                playlist: {},\n                // 歌曲列表\n                playlistTracks: [],\n                // 热门评论\n                hotComments: [],\n                hotCount: 0,\n                // 最新评论\n                newComments: []\n            };\n        },\n        created() {\n            // 详情页\n            axios({\n                url: 'https://autumnfish.cn/playlist/detail',\n                methods: 'get',\n                params: {\n                    id: this.$route.query.id\n                }\n            }).then(res => {\n                this.playlist = res.data.playlist\n                this.playlistTracks = res.data.playlist.tracks\n            })\n            // 热门评论\n            axios({\n                url: 'https://autumnfish.cn/comment/hot',\n                methods: 'get',\n                params: {\n                    id: this.$route.query.id,\n                    type: 2,\n                    limit: 5\n                }\n            }).then(res => {\n                this.hotComments = res.data.hotComments\n                this.hotCount = res.data.total\n            })\n            // 最新评论\n            this.getNewComments()\n        },\n        filters: {\n            // 处理时间 毫秒->分秒\n            formatTime: function(time) {\n                let min = parseInt(time / 1000 / 60)\n                min = min < 10 ? '0' + min : min\n                let sec = parseInt(time / 1000 % 60)\n                sec = sec < 10 ? '0' + sec : sec\n                return min + ':' + sec\n            },\n            // YYYY-MM-DD hh:mm:ss\n            formatDate: function (value) {\n                let date = new Date(value);\n                let y = date.getFullYear();\n                let MM = date.getMonth() + 1;\n                MM = MM < 10 ? ('0' + MM) : MM;\n                let d = date.getDate();\n                d = d < 10 ? ('0' + d) : d;\n                let h = date.getHours();\n                h = h < 10 ? ('0' + h) : h;\n                let m = date.getMinutes();\n                m = m < 10 ? ('0' + m) : m;\n                let s = date.getSeconds();\n                s = s < 10 ? ('0' + s) : s;\n                return y + '-' + MM + '-' + d + ' ' + h + ':' + m + ':' + s;\n            }\n        },\n        methods: {\n            // 最新评论\n            getNewComments() {\n                axios({\n                    url: 'https://autumnfish.cn/comment/playlist',\n                    methods: 'get',\n                    params: {\n                        id: this.$route.query.id,\n                        limit: 5,\n                        offset: (this.page-1)*5\n                    }\n                }).then(res => {\n                    this.newComments = res.data.comments\n                    this.total = res.data.total\n                })\n            },\n            // 分页\n            handleCurrentChange(val) {\n                this.page = val\n                this.getNewComments()\n            }\n        }\n    };\n</script>\n\n<style >\n\n</style>\n"],"sourceRoot":"src/views"}]}