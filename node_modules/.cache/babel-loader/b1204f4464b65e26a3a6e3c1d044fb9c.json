{"remainingRequest":"/Users/qianjunhui/WebstormProjects/music/node_modules/babel-loader/lib/index.js!/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qianjunhui/WebstormProjects/music/src/views/05.result.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qianjunhui/WebstormProjects/music/src/views/05.result.vue","mtime":1591600025828},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qianjunhui/WebstormProjects/music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdyZXN1bHQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhY3RpdmVJbmRleDogJ3NvbmdzJywKICAgICAgLy8g5q2M5puyCiAgICAgIHNvbmdzTGlzdHM6IFtdLAogICAgICBzb25nQ291bnQ6IDAsCiAgICAgIC8vIOatjOWNlQogICAgICBwbGF5bGlzdHM6IFtdLAogICAgICBwbGF5bGlzdENvdW50OiAwLAogICAgICAvLyBNVgogICAgICBtdmxpc3RzOiBbXSwKICAgICAgbXZDb3VudDogMAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnNlYXJjaExpc3QoMSwgMTApOwogIH0sCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZUluZGV4OiBmdW5jdGlvbiBhY3RpdmVJbmRleCgpIHsKICAgICAgdmFyIHR5cGUgPSAxOwogICAgICB2YXIgbGltaXQgPSAxMDsKCiAgICAgIHN3aXRjaCAodGhpcy5hY3RpdmVJbmRleCkgewogICAgICAgIGNhc2UgJ3NvbmdzJzoKICAgICAgICAgIHR5cGUgPSAxOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ2xpc3RzJzoKICAgICAgICAgIHR5cGUgPSAxMDAwOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ212JzoKICAgICAgICAgIHR5cGUgPSAxMDA0OwogICAgICAgICAgbGltaXQgPSA4OwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgdGhpcy5zZWFyY2hMaXN0KHR5cGUsIGxpbWl0KTsKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIC8vIOWkhOeQhuaXtumXtCDmr6vnp5ItPuWIhuenkgogICAgZm9ybWF0VGltZTogZnVuY3Rpb24gZm9ybWF0VGltZSh0aW1lKSB7CiAgICAgIHZhciBtaW4gPSBwYXJzZUludCh0aW1lIC8gMTAwMCAvIDYwKTsKICAgICAgbWluID0gbWluIDwgMTAgPyAnMCcgKyBtaW4gOiBtaW47CiAgICAgIHZhciBzZWMgPSBwYXJzZUludCh0aW1lIC8gMTAwMCAlIDYwKTsKICAgICAgc2VjID0gc2VjIDwgMTAgPyAnMCcgKyBzZWMgOiBzZWM7CiAgICAgIHJldHVybiBtaW4gKyAnOicgKyBzZWM7CiAgICB9LAogICAgLy8g5aSE55CG5qyh5pWw77ya6LaF6L+HMTDkuIfvvIzmmL7npLp4eOS4hwogICAgZm9ybWF0Q291bnQ6IGZ1bmN0aW9uIGZvcm1hdENvdW50KGNvdW50KSB7CiAgICAgIGlmIChjb3VudCA+IDEwMDAwMCkgewogICAgICAgIHZhciBwbGF5Q291bnQgPSBwYXJzZUludChjb3VudCAvIDEwMDAwKSArICfkuIcnOwogICAgICAgIHJldHVybiBwbGF5Q291bnQ7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluaVsOaNrgogICAgc2VhcmNoTGlzdDogZnVuY3Rpb24gc2VhcmNoTGlzdCh0eXBlLCBsaW1pdCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MoewogICAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9zZWFyY2gnLAogICAgICAgIG1ldGhvZHM6ICdnZXQnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAga2V5d29yZHM6IHRoaXMuJHJvdXRlLnF1ZXJ5Lmt3LAogICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgIGxpbWl0OiBsaW1pdAogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHR5cGUgPT0gMSkgewogICAgICAgICAgX3RoaXMuc29uZ3NMaXN0cyA9IHJlcy5kYXRhLnJlc3VsdC5zb25nczsKICAgICAgICAgIF90aGlzLnNvbmdDb3VudCA9IHJlcy5kYXRhLnJlc3VsdC5zb25nQ291bnQ7CiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEwMDApIHsKICAgICAgICAgIF90aGlzLnBsYXlsaXN0cyA9IHJlcy5kYXRhLnJlc3VsdC5wbGF5bGlzdHM7CiAgICAgICAgICBfdGhpcy5wbGF5bGlzdENvdW50ID0gcmVzLmRhdGEucmVzdWx0LnBsYXlsaXN0Q291bnQ7CiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEwMDQpIHsKICAgICAgICAgIF90aGlzLm12bGlzdHMgPSByZXMuZGF0YS5yZXN1bHQubXZzOwogICAgICAgICAgX3RoaXMubXZDb3VudCA9IHJlcy5kYXRhLnJlc3VsdC5tdkNvdW50OwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5pKt5pS+6Z+z5LmQCiAgICBwbGF5TXVzaWM6IGZ1bmN0aW9uIHBsYXlNdXNpYyhpZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGF4aW9zKHsKICAgICAgICB1cmw6ICdodHRwczovL2F1dHVtbmZpc2guY24vc29uZy91cmwnLAogICAgICAgIG1ldGhvZHM6ICdnZXQnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IGlkCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgc29uZ1VybCA9IHJlcy5kYXRhLmRhdGFbMF0udXJsOwogICAgICAgIF90aGlzMi4kcGFyZW50Lm11c2ljVXJsID0gc29uZ1VybDsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5q2M5Y2V6K+m5oOF6aG1CiAgICB0b0RldGFpbDogZnVuY3Rpb24gdG9EZXRhaWwoaWQpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9wbGF5bGlzdD9pZD0iLmNvbmNhdChpZCkpOwogICAgfSwKICAgIC8vIE1W6K+m5oOF6aG1CiAgICB0b01WOiBmdW5jdGlvbiB0b01WKGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvbXY/aWQ9Ii5jb25jYXQoaWQpKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["05.result.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"result-container\">\n        <div class=\"title-wrap\">\n            <h2 class=\"title\">{{ $route.query.kw }}</h2>\n            <span class=\"sub-title\">找到{{ songCount }}个结果</span>\n        </div>\n        <el-tabs v-model=\"activeIndex\">\n            <el-tab-pane label=\"歌曲\" name=\"songs\">\n                <table class=\"el-table\">\n                    <thead>\n                    <th></th>\n                    <th>音乐标题</th>\n                    <th>歌手</th>\n                    <th>专辑</th>\n                    <th>时长</th>\n                    </thead>\n                    <tbody>\n                        <tr\n                            class=\"el-table__row\"\n                            v-for=\"(item,index) in songsLists\"\n                            :key=\"index\"\n                            @dblclick=\"playMusic(item.id)\"\n                        >\n                            <td>{{ index+1 }}</td>\n                            <td>\n                                <div class=\"song-wrap\">\n                                    <div class=\"name-wrap\">\n                                        <span>{{ item.name }}</span>\n                                        <span v-if=\"item.mvid!=0\" class=\"iconfont icon-mv\"></span>\n                                    </div>\n                                    <span v-if=\"item.alias.length!=0\">{{ item.alias[0] }}</span>\n                                </div>\n                            </td>\n                            <td>{{ item.artists[0].name }}</td>\n                            <td>{{ item.album.name }}</td>\n                            <td>{{ item.duration | formatTime }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </el-tab-pane>\n            <el-tab-pane label=\"歌单\" name=\"lists\">\n                <div class=\"items\">\n                    <div\n                        class=\"item\"\n                        v-for=\"(item,index) in playlists\"\n                        :key=\"index\"\n                        @click=\"toDetail(item.id)\"\n                    >\n                        <div class=\"img-wrap\">\n                            <div class=\"num-wrap\">\n                                播放量:\n                                <span class=\"num\">{{ item.playCount | formatCount }}</span>\n                            </div>\n                            <img :src=\"item.coverImgUrl\" alt=\"\" />\n                            <span class=\"iconfont icon-play\"></span>\n                        </div>\n                        <p class=\"name\">{{ item.name }}</p>\n                    </div>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"MV\" name=\"mv\">\n                <div class=\"items mv\">\n                    <div\n                        class=\"item\"\n                        v-for=\"(item,index) in mvlists\"\n                        :key=\"index\"\n                        @click=\"toMV(item.id)\"\n                    >\n                        <div class=\"img-wrap\">\n                            <img :src=\"item.cover\" alt=\"\" />\n                            <span class=\"iconfont icon-play\"></span>\n                            <div class=\"num-wrap\">\n                                <div class=\"iconfont icon-play\"></div>\n                                <div class=\"num\">{{ item.playCount | formatCount }}</div>\n                            </div>\n                            <span class=\"time\">{{ item.duration | formatTime }}</span>\n                        </div>\n                        <div class=\"info-wrap\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"singer\">{{ item.artistName }}</div>\n                        </div>\n                    </div>\n                </div>\n            </el-tab-pane>\n        </el-tabs>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n\n    export default {\n        name: 'result',\n        data() {\n            return {\n                activeIndex: 'songs',\n                // 歌曲\n                songsLists: [],\n                songCount: 0,\n                // 歌单\n                playlists: [],\n                playlistCount: 0,\n                // MV\n                mvlists: [],\n                mvCount: 0\n            }\n        },\n        created() {\n            this.searchList(1,10)\n        },\n        watch:{\n            activeIndex(){\n                let type = 1\n                let limit = 10\n                switch (this.activeIndex) {\n                    case 'songs':\n                        type = 1\n                        break;\n                    case 'lists':\n                        type = 1000\n                        break;\n                    case 'mv':\n                        type = 1004\n                        limit = 8\n                        break;\n                    default:\n                        break;\n                }\n                this.searchList(type,limit)\n            }\n        },\n        filters: {\n            // 处理时间 毫秒->分秒\n            formatTime: function (time) {\n                let min = parseInt(time / 1000 / 60)\n                min = min < 10 ? '0' + min : min\n                let sec = parseInt(time / 1000 % 60)\n                sec = sec < 10 ? '0' + sec : sec\n                return min + ':' + sec\n            },\n            // 处理次数：超过10万，显示xx万\n            formatCount: function (count) {\n                if(count > 100000){\n                    let playCount = parseInt(count/10000)+'万'\n                    return playCount\n                }\n            }\n        },\n        methods: {\n            // 获取数据\n            searchList(type,limit) {\n                axios({\n                    url: 'https://autumnfish.cn/search',\n                    methods: 'get',\n                    params: {\n                        keywords: this.$route.query.kw,\n                        type,\n                        limit\n                    }\n                }).then(res => {\n                    if(type == 1){\n                        this.songsLists = res.data.result.songs\n                        this.songCount = res.data.result.songCount\n                    }else if (type == 1000) {\n                        this.playlists = res.data.result.playlists\n                        this.playlistCount = res.data.result.playlistCount\n                    }else if (type == 1004) {\n                        this.mvlists = res.data.result.mvs\n                        this.mvCount = res.data.result.mvCount\n                    }\n                })\n            },\n            // 播放音乐\n            playMusic(id){\n                axios({\n                    url: 'https://autumnfish.cn/song/url',\n                    methods: 'get',\n                    params: {\n                        id\n                    }\n                }).then(res => {\n                    let songUrl = res.data.data[0].url\n                    this.$parent.musicUrl = songUrl\n                })\n            },\n            // 歌单详情页\n            toDetail(id) {\n                this.$router.push(`/playlist?id=${id}`)\n            },\n            // MV详情页\n            toMV(id) {\n                this.$router.push(`/mv?id=${id}`)\n            }\n        }\n    }\n</script>\n\n<style >\n\n</style>\n"],"sourceRoot":"src/views"}]}